{"version":3,"file":"react-dial-knob.cjs.js","sources":["../src/KnobArea.ts","../src/KnobErrorWrap.tsx","../src/Knob.tsx","../src/skins/layout/SkinWrap.tsx","../src/util/composeTwo.ts","../src/util/useAngleUpdater.ts","../src/skins/Basic.tsx","../src/skins/HighContrast.tsx","../src/skins/White.tsx","../src/skins/Silver.tsx","../src/skins/Donut.tsx"],"sourcesContent":["import { KnobProps } from './Knob'\n\nclass KnobArea {\n    onAngleChange: (number) => void\n    onValueChange: (number) => void\n    onInteractionChange: (boolean) => void\n    min: number\n    max: number\n    step: number\n    diameter: number\n    spaceMaxFromZero: boolean\n    jumpLimit?: number\n    refElement: React.RefObject<HTMLDivElement>\n    windowEventListeners: {\n        mouse: Array<['mousemove' | 'mouseup', EventListener]>\n        touch: Array<['touchmove' | 'touchend', EventListener]>\n    }\n\n    private _isInteracting: boolean\n    private _value: number\n    private _angle: number\n    private _locationX: number\n    private _locationY: number\n\n    constructor(refElement: React.RefObject<HTMLDivElement>, props: KnobProps) {\n        this.onAngleChange = props.onAngleChange\n        this.onValueChange = props.onValueChange\n        this.onInteractionChange = props.onInteractionChange\n        this._locationX = 0\n        this._locationY = 0\n        this.refElement = refElement\n\n        this._isInteracting = false\n\n        this.windowEventListeners = {\n            mouse: [\n                ['mousemove', this.handleOnMouseMove],\n                ['mouseup', this.handleOnMouseUp],\n            ],\n            touch: [\n                ['touchmove', this.handleOnTouchMove],\n                ['touchend', this.handleOnTouchEnd],\n            ],\n        }\n\n        this.updateFromProps(props)\n    }\n\n    updateFromProps(props: KnobProps): void {\n        if (props.max <= props.min || props.max < props.min + props.step) {\n            throw new Error(\n                'Max value should be bigger or equal to min+step value.',\n            )\n        }\n\n        this.min = props.min\n        this.max = props.max\n        this.step = props.step\n        this.diameter = props.diameter\n\n        this.onAngleChange = props.onAngleChange || this.onAngleChange\n        this.onValueChange = props.onValueChange || this.onValueChange\n        this.onInteractionChange =\n            props.onInteractionChange || this.onInteractionChange\n        this.spaceMaxFromZero =\n            props.spaceMaxFromZero !== undefined ? props.spaceMaxFromZero : true\n\n        if (props.jumpLimit) {\n            this.jumpLimit = props.jumpLimit\n        }\n\n        if (props.value !== this.value) {\n            if (props.min > this.value || props.value < props.min) {\n                this.value = props.min\n            } else if (props.max < this.value || props.value > props.max) {\n                this.value = props.max\n            } else {\n                this.value = props.value\n            }\n            this.angle = this.angleFromValue(this.value)\n        }\n\n        if (this.value % this.step || (this.max - this.min) % this.step) {\n            throw new Error(\n                'Value and (max - min) should be divisible by step.',\n            )\n        }\n    }\n\n    get angle(): number {\n        return this._angle\n    }\n\n    set angle(val: number) {\n        if (this._angle === val) {\n            return\n        }\n        this._angle = val\n        if (this.onAngleChange) {\n            this.onAngleChange(this._angle)\n        }\n    }\n\n    get value(): number {\n        return this._value\n    }\n\n    set value(val: number) {\n        const newValue = this.getValueWithinJumpLimit(val)\n        if (this._value === newValue) {\n            return\n        }\n        this._value = newValue\n        if (this.onValueChange) {\n            this.onValueChange(this._value)\n        }\n    }\n\n    get isInteracting(): boolean {\n        return this._isInteracting\n    }\n\n    set isInteracting(val: boolean) {\n        if (this._isInteracting === val) {\n            return\n        }\n        this._isInteracting = val\n        if (this.onInteractionChange) {\n            this.onInteractionChange(this._isInteracting)\n        }\n    }\n\n    get numSteps(): number {\n        return (this.max - this.min) / this.step\n    }\n\n    get valsDistribution(): number {\n        if (this.spaceMaxFromZero) {\n            return 360 / (this.numSteps + 1)\n        }\n        return 360 / this.numSteps\n    }\n\n    private getValueWithinJumpLimit(newValue: number): number {\n        if (!this.jumpLimit) {\n            return newValue\n        }\n        const limit = Math.max(\n            this.step,\n            Math.ceil((this.max - this.min) * this.jumpLimit),\n        )\n        if (Math.abs(newValue - this.value) > limit) {\n            if (\n                newValue > this.max * 0.9 &&\n                this.value < this.min + this.max * 0.1\n            ) {\n                return this.min\n            }\n            if (\n                newValue < this.min + this.max * 0.1 &&\n                this.value > this.max * 0.9\n            ) {\n                return this.max\n            }\n            return this.value\n        }\n        return newValue\n    }\n\n    private getComputedTransformXY(\n        el: HTMLElement,\n    ): { x: number; y: number; scaleX: number; scaleY: number } {\n        if (!window.getComputedStyle || !el) {\n            return { x: 0, y: 0, scaleX: 1, scaleY: 1 }\n        }\n\n        const style = window.getComputedStyle(el)\n        const transform = style.transform || style.webkitTransform\n        if (!transform) {\n            return { x: 0, y: 0, scaleX: 1, scaleY: 1 }\n        }\n        let mat = transform.match(/^matrix3d\\((.+)\\)$/)\n        if (mat) {\n            const scaleX = parseFloat(mat[1].split(', ')[0])\n            const scaleY = parseFloat(mat[1].split(', ')[5])\n            return {\n                x: parseFloat(mat[1].split(', ')[12]),\n                y: parseFloat(mat[1].split(', ')[13]),\n                scaleX,\n                scaleY,\n            }\n        }\n\n        mat = transform.match(/^matrix\\((.+)\\)$/)\n        const scaleX = mat ? parseFloat(mat[1].split(', ')[0]) : 1\n        const scaleY = mat ? parseFloat(mat[1].split(', ')[3]) : 1\n        return {\n            x: mat ? parseFloat(mat[1].split(', ')[4]) : 0,\n            y: mat ? parseFloat(mat[1].split(', ')[5]) : 0,\n            scaleX,\n            scaleY,\n        }\n    }\n\n    updateAreaLocation(eventCoords: {\n        pageX: number\n        pageY: number\n        clientX: number\n        clientY: number\n    }): void {\n        const areaRadius = this.diameter / 2\n        // See article with explanation at: https://www.kirupa.com/html5/get_element_position_using_javascript.htm\n        let x = 0\n        let y = 0\n        let el = this.refElement.current as HTMLElement\n        let transformXY = this.getComputedTransformXY(el)\n        while (el) {\n            if (el.tagName.toUpperCase() === 'BODY') {\n                // deal with browser quirks with body/window/document and page scroll\n                const xScroll =\n                    el.scrollLeft || document.documentElement.scrollLeft\n                const yScroll =\n                    el.scrollTop || document.documentElement.scrollTop\n\n                x += el.offsetLeft - xScroll + el.clientLeft\n                y += el.offsetTop - yScroll + el.clientTop\n            } else {\n                // for all other non-BODY elements\n                x += el.offsetLeft - el.scrollLeft + el.clientLeft\n                y += el.offsetTop - el.scrollTop + el.clientTop\n            }\n            x += transformXY.x\n            y += transformXY.y\n            el = el.offsetParent as HTMLElement\n            transformXY = this.getComputedTransformXY(el)\n        }\n\n        this._locationX = x + areaRadius\n        this._locationY = y + areaRadius\n\n        this._locationX += eventCoords.pageX - eventCoords.clientX\n        this._locationY += eventCoords.pageY - eventCoords.clientY\n    }\n\n    calcDegreeOfRotation(pageX: number, pageY: number): number {\n        const rad = Math.atan2(pageX - this._locationX, pageY - this._locationY)\n        const deg = Math.abs(rad * (180 / Math.PI) - 180)\n        return deg\n    }\n\n    valueFromAngle(angle: number): number {\n        const angleAsPercent = angle / (this.numSteps * this.valsDistribution)\n        const totalValue = this.numSteps * this.step\n        const val = this.min + angleAsPercent * totalValue\n        if (val > this.max + this.step / 2) {\n            return this.min\n        }\n        const valuesList = Array.from(new Array(this.numSteps + 1)).map(\n            (_, i) => {\n                return this.min + i * this.step\n            },\n        )\n        const closest = valuesList.reduce(function (prev, curr) {\n            return Math.abs(curr - val) < Math.abs(prev - val) ? curr : prev\n        })\n        return closest\n    }\n\n    angleFromValue(value: number): number {\n        return Math.ceil(\n            ((value - this.min) / this.step) * this.valsDistribution,\n        )\n    }\n\n    updateAngleValue(pageX: number, pageY: number): void {\n        requestAnimationFrame(() => {\n            const updatedAngle = this.calcDegreeOfRotation(pageX, pageY)\n            this.value = this.valueFromAngle(updatedAngle)\n            this.angle = this.angleFromValue(this.value)\n        })\n    }\n\n    handleOnMouseDown = (event: React.MouseEvent): void => {\n        this.addWindowEventListeners('mouse')\n        const { pageX, pageY, clientX, clientY } = event\n        this.updateAreaLocation({ pageX, pageY, clientX, clientY })\n        this.updateAngleValue(pageX, pageY)\n    }\n\n    handleOnMouseMove = (event: MouseEvent): void => {\n        if (!this.isInteracting) {\n            return\n        }\n        const { pageX, pageY } = event\n        this.updateAngleValue(pageX, pageY)\n    }\n\n    handleOnMouseUp = (): void => {\n        this.removeWindowEventListeners('mouse')\n    }\n\n    handleOnTouchStart = (event: React.TouchEvent): void => {\n        this.addWindowEventListeners('touch')\n        if ('changedTouches' in event && event.changedTouches.length === 1) {\n            const { pageX, pageY, clientX, clientY } = event.changedTouches[0]\n            this.updateAreaLocation({ pageX, pageY, clientX, clientY })\n            this.updateAngleValue(pageX, pageY)\n        }\n    }\n\n    handleOnTouchMove = (event: TouchEvent): void => {\n        if (!this.isInteracting) {\n            return\n        }\n        if ('changedTouches' in event && event.changedTouches.length === 1) {\n            const { pageX, pageY } = event.changedTouches[0]\n            this.updateAngleValue(pageX, pageY)\n        }\n    }\n\n    handleOnTouchEnd = (): void => {\n        this.removeWindowEventListeners('touch')\n    }\n\n    handleOnFocus = (): void => {\n        this.isInteracting = true\n    }\n\n    handleOnBlur = (): void => {\n        this.isInteracting = false\n    }\n\n    handleOnKeyDown = (event: React.KeyboardEvent): void => {\n        const keyCode =\n            event.key || { 38: 'ArrowUp', 40: 'ArrowDown' }[event.keyCode]\n        if (keyCode === 'ArrowUp' && this.value + this.step <= this.max) {\n            this.value += this.step\n            this.angle = this.angleFromValue(this.value)\n        } else if (\n            keyCode === 'ArrowDown' &&\n            this.value - this.step >= this.min\n        ) {\n            this.value -= this.step\n            this.angle = this.angleFromValue(this.value)\n        }\n    }\n\n    addWindowEventListeners(group: 'mouse' | 'touch'): void {\n        this.isInteracting = true\n        this.windowEventListeners[group].forEach(\n            (handlerData: [string, EventListener]) => {\n                const [eventName, handler] = handlerData\n                window.addEventListener(eventName, handler)\n            },\n        )\n    }\n\n    removeWindowEventListeners(group: 'mouse' | 'touch'): void {\n        this.isInteracting = false\n        this.windowEventListeners[group].forEach(\n            (handlerData: [string, EventListener]) => {\n                const [eventName, handler] = handlerData\n                window.removeEventListener(eventName, handler)\n            },\n        )\n    }\n}\n\nexport default KnobArea\n","import React from 'react'\n\ninterface ErrorAreaProps {\n    error: Error\n    diameter: number\n    children?: React.ReactNode\n}\n\nexport default function KnobErrorWrap(props: ErrorAreaProps): JSX.Element {\n    console && console.error(props.error)\n\n    return (\n        <div\n            style={{\n                width: `${props.diameter}px`,\n                height: `${props.diameter}px`,\n                borderRadius: `${props.diameter / 2}px`,\n                position: 'relative' as const,\n                outline: 'none',\n                boxSizing: 'border-box' as const,\n                overflow: 'hidden',\n            }}\n        >\n            <div\n                style={{\n                    fontSize: '22px',\n                    fontWeight: 'bold',\n                    color: 'red',\n                    textAlign: 'center',\n                    width: '100%',\n                    height: '100%',\n                    position: 'absolute',\n                    zIndex: 999,\n                    paddingTop: 'calc(50% - 0.5em)',\n                    background: 'rgba(0, 0, 0, 0.2)',\n                    pointerEvents: 'none',\n                }}\n            >\n                💣\n            </div>\n            {props.children}\n        </div>\n    )\n}\n","import React, { useRef } from 'react'\nimport KnobArea from './KnobArea'\nimport KnobErrorWrap from './KnobErrorWrap'\n\nexport interface KnobProps {\n    diameter: number\n    value: number\n    min: number\n    max: number\n    step: number\n    jumpLimit?: number\n    spaceMaxFromZero?: boolean\n    ariaLabelledBy?: string\n    ariaValueText?: string\n    knobStyle?: React.CSSProperties\n    children?: React.ReactNode\n    onAngleChange?: (angle: number) => void\n    onInteractionChange?: (isInteracting: boolean) => void\n    onValueChange?: (value: number) => void\n}\n\nexport function useKnobAreaClass(\n    props: KnobProps,\n): [React.RefObject<HTMLDivElement>, KnobArea | null, Error | null] {\n    const refElement = useRef(null)\n    const refKnobArea = useRef<KnobArea>(null)\n    let errorContent: null | Error = null\n    try {\n        if (!refKnobArea.current) {\n            refKnobArea.current = new KnobArea(refElement, props)\n        } else {\n            refKnobArea.current.updateFromProps(props)\n        }\n    } catch (e) {\n        errorContent = e\n    }\n    return [refElement, refKnobArea.current, errorContent]\n}\n\nexport default function Knob(props: KnobProps): JSX.Element {\n    const [refElement, knobArea, errorContent] = useKnobAreaClass(props)\n    const defaultStyle = {\n        width: `${props.diameter}px`,\n        height: `${props.diameter}px`,\n        borderRadius: `${props.diameter / 2}px`,\n        position: 'relative' as const,\n        outline: 'none',\n        boxSizing: 'border-box' as const,\n        overflow: 'hidden',\n    }\n    const userStyle = props.knobStyle || {}\n    const activeStyle = { ...defaultStyle, ...userStyle }\n    const knobElement = (\n        <div\n            ref={refElement}\n            onMouseDown={knobArea && knobArea.handleOnMouseDown}\n            onTouchStart={knobArea && knobArea.handleOnTouchStart}\n            onKeyDown={knobArea && knobArea.handleOnKeyDown}\n            onFocus={knobArea && knobArea.handleOnFocus}\n            onBlur={knobArea && knobArea.handleOnBlur}\n            style={activeStyle}\n            tabIndex={0}\n            aria-valuenow={props.value}\n            aria-valuemin={props.min}\n            aria-valuemax={props.max}\n            aria-valuetext={props.ariaValueText}\n            aria-labelledby={props.ariaLabelledBy}\n        >\n            {props.children}\n        </div>\n    )\n    if (errorContent) {\n        return (\n            <KnobErrorWrap error={errorContent} diameter={props.diameter}>\n                {knobElement}\n            </KnobErrorWrap>\n        )\n    }\n    return knobElement\n}\n","import React from 'react'\n\ninterface SkinWrapProps {\n    children: React.ReactNode\n    style?: React.CSSProperties\n}\n\nexport default function SkinWrap(props: SkinWrapProps): JSX.Element {\n    const defaultStyle = {\n        position: 'relative' as const,\n        outline: 'none',\n        boxSizing: 'border-box' as const,\n    }\n    const userStyle = props.style || {}\n    const activeStyle = { ...defaultStyle, ...userStyle }\n    return <div style={activeStyle}>{props.children}</div>\n}\n","export default function composeTwo<T>(\n    handler: (...args: T[]) => void,\n    callback?: (...args: T[]) => void,\n): (...args: T[]) => void {\n    return function (...args): void {\n        handler(...args)\n        if (callback) {\n            callback(...args)\n        }\n    }\n}\n","import { useState, useRef, useEffect } from 'react'\n\nexport default function useAngleUpdater(\n    currentValue: number,\n): [number, (number) => void] {\n    const angleRef = useRef(0)\n    const setAngleRef = (angleVal: number): void => {\n        angleRef.current = angleVal\n    }\n    const [angle, setAngle] = useState(0)\n    useEffect(() => {\n        setAngle(angleRef.current)\n    }, [angleRef.current, currentValue])\n    return [angle, setAngleRef]\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface BasicTheme {\n    defaultColor?: string\n    activeColor?: string\n    gradientStart?: string\n    gradientEnd?: string\n    notchAndText?: string\n}\n\nexport default function Basic(props: SkinProps<BasicTheme>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeColor = theme.activeColor || '#a1dca8'\n    const defaultColor = theme.defaultColor || '#3f3f3f'\n    const gradientStart = theme.gradientStart || '#f9f9f9'\n    const gradientEnd = theme.gradientEnd || '#eaeced'\n    const notchAndText = theme.notchAndText || '#3f3f3f'\n    const borderColor = isActive ? activeColor : defaultColor\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg\n                        viewBox=\"0 0 166.56 166.56\"\n                        transform={`rotate(${angle})`}\n                        style={{ transform: `rotate(${angle}deg)` }}\n                    >\n                        <defs>\n                            <linearGradient id=\"a\">\n                                <stop\n                                    offset=\"0\"\n                                    stopColor={gradientStart}\n                                    stopOpacity=\"1\"\n                                ></stop>\n                                <stop\n                                    offset=\"1\"\n                                    stopColor={gradientEnd}\n                                    stopOpacity=\"1\"\n                                ></stop>\n                            </linearGradient>\n                            <filter\n                                id=\"b\"\n                                width=\"1.11\"\n                                height=\"1.11\"\n                                x=\"-0.055\"\n                                y=\"-0.055\"\n                                colorInterpolationFilters=\"sRGB\"\n                            >\n                                <feGaussianBlur stdDeviation=\"3.45\"></feGaussianBlur>\n                            </filter>\n                            <linearGradient\n                                id=\"c\"\n                                x1=\"140.985\"\n                                x2=\"63.122\"\n                                y1=\"98.751\"\n                                y2=\"202.317\"\n                                gradientTransform=\"translate(-75.643 -328.104)\"\n                                gradientUnits=\"userSpaceOnUse\"\n                                xlinkHref=\"#a\"\n                            ></linearGradient>\n                        </defs>\n                        <g fillOpacity=\"1\" transform=\"translate(-21.72 -65.22)\">\n                            <circle\n                                cx=\"105\"\n                                cy=\"148.5\"\n                                r=\"75\"\n                                fill=\"#ccc\"\n                                stroke=\"none\"\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"17.106\"\n                                filter=\"url(#b)\"\n                                opacity=\"1\"\n                            ></circle>\n                            <circle\n                                cx=\"29.357\"\n                                cy=\"-179.604\"\n                                r=\"70\"\n                                fill=\"url(#c)\"\n                                stroke={borderColor}\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"1\"\n                                opacity=\"1\"\n                                transform=\"rotate(135.448)\"\n                            ></circle>\n                            <circle\n                                cx=\"105.083\"\n                                cy=\"88.628\"\n                                r=\"4.443\"\n                                fill={notchAndText}\n                                stroke=\"#b1b1b1\"\n                                strokeDasharray=\"none\"\n                                strokeMiterlimit=\"4\"\n                                strokeOpacity=\"1\"\n                                strokeWidth=\"0.551\"\n                                opacity=\"1\"\n                            ></circle>\n                        </g>\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: notchAndText,\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface HighContrastTheme {\n    defaultColor?: string\n    activeColor?: string\n}\n\nexport default function HighContrast(\n    props: SkinProps<HighContrastTheme>,\n): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeColor = theme.activeColor || '#b56a7a'\n    const defaultColor = theme.defaultColor || '#100'\n    const bgrColor = isActive ? activeColor : defaultColor\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg\n                        viewBox=\"0 0 100 100\"\n                        transform={`rotate(${angle})`}\n                        style={{ transform: `rotate(${angle}deg)` }}\n                    >\n                        <path\n                            fill={bgrColor}\n                            d=\"M50 0A50 50 0 000 50a50 50 0 0050 50 50 50 0 0050-50A50 50 0 0050 0zm0 2a48 48 0 0148 48 48 48 0 01-48 48A48 48 0 012 50 48 48 0 0150 2z\"\n                        />\n                        <path\n                            fill={bgrColor}\n                            d=\"M50 4A46 46 0 004 50a46 46 0 0046 46 46 46 0 0046-46A46 46 0 0050 4zm0 2.141a4.276 4.276 0 014.276 4.277A4.276 4.276 0 0150 14.694a4.276 4.276 0 01-4.276-4.276A4.276 4.276 0 0150 6.141z\"\n                        />\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 3)}px`,\n                            fontWeight: 'bold',\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: '#fff',\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface WhiteTheme {\n    activeNotchColor?: string\n    defaultNotchColor?: string\n    activeTextColor?: string\n    defaultTextColor?: string\n}\n\nexport default function White(props: SkinProps<WhiteTheme>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [isActive, setIsActive] = useState(false)\n    const theme = props.theme || {}\n    const activeNotchColor = theme.activeNotchColor || '#b56a7a'\n    const defaultNotchColor = theme.defaultNotchColor || '#f7f7f7'\n    const activeTextColor = theme.activeTextColor || '#b56a7a'\n    const defaultTextColor = theme.defaultTextColor || '#100'\n    const bgrColor = isActive ? activeTextColor : defaultTextColor\n    const numSteps = Math.ceil((props.max - props.min) / props.step)\n    const numNotches = Math.min(numSteps, 36)\n    const activeNotch = Math.ceil(angle / Math.ceil(360 / numNotches))\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>(\n        setIsActive,\n        props.onInteractionChange,\n    )\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <svg viewBox=\"0 0 62.463 62.463\">\n                        <defs>\n                            <linearGradient id=\"prefix__c\">\n                                <stop offset={0} stopColor=\"#fff\" />\n                                <stop offset={1} stopColor=\"#b0b0b0\" />\n                            </linearGradient>\n                            <linearGradient id=\"prefix__a\">\n                                <stop offset={0} stopColor=\"#939393\" />\n                                <stop\n                                    offset={1}\n                                    stopColor=\"#f0f0f0\"\n                                    stopOpacity={0}\n                                />\n                            </linearGradient>\n                            <linearGradient id=\"prefix__b\">\n                                <stop offset={0} stopColor=\"#b0b0b0\" />\n                                <stop offset={1} stopColor=\"#fdfdfd\" />\n                            </linearGradient>\n                            <linearGradient\n                                gradientTransform=\"matrix(.84848 0 0 .84848 -25.569 29.664)\"\n                                gradientUnits=\"userSpaceOnUse\"\n                                y2={136.304}\n                                x2={200.519}\n                                y1={175.459}\n                                x1={244.552}\n                                id=\"prefix__e\"\n                                xlinkHref=\"#prefix__b\"\n                            />\n                            <linearGradient\n                                gradientUnits=\"userSpaceOnUse\"\n                                y2={196.319}\n                                x2={143.659}\n                                y1={184.184}\n                                x1={133.863}\n                                id=\"prefix__d\"\n                                xlinkHref=\"#prefix__c\"\n                            />\n                        </defs>\n                        <g transform=\"translate(-131.196 -134.336)\">\n                            <g transform=\"translate(-442.372 -663.575) scale(4.37185)\">\n                                <circle\n                                    cx={138.339}\n                                    cy={189.655}\n                                    r={7.144}\n                                    fill={bgrColor}\n                                />\n                                <path\n                                    d=\"M138.34 182.511a7.144 7.144 0 00-7.144 7.144 7.144 7.144 0 007.143 7.144 7.144 7.144 0 007.144-7.144 7.144 7.144 0 00-7.144-7.144zm0 .53a6.615 6.615 0 016.614 6.614 6.615 6.615 0 01-6.615 6.614 6.615 6.615 0 01-6.614-6.614 6.615 6.615 0 016.614-6.615z\"\n                                    fill=\"url(#prefix__d)\"\n                                />\n                                <circle\n                                    cx={138.339}\n                                    cy={189.655}\n                                    r={6.35}\n                                    fill=\"#fff\"\n                                />\n                            </g>\n                            <circle\n                                r={14.583}\n                                cy={192.949}\n                                cx={149.253}\n                                fill=\"none\"\n                            />\n                            <circle\n                                cy={165.567}\n                                cx={162.427}\n                                fill=\"#f0f0f0\"\n                                r={27.151}\n                            />\n                        </g>\n                        <g\n                            transform={`translate(${62.463 / 2} ${\n                                62.463 / 2\n                            }) scale(0.45) rotate(-90)`}\n                        >\n                            {Array.from(new Array(numNotches)).map(\n                                (_, index) => {\n                                    const step = (2 * Math.PI) / numNotches\n                                    const angle = index * step\n                                    const width = 2\n                                    const height = 8\n                                    const x =\n                                        width / 2 + 62.463 * Math.cos(angle)\n                                    const y =\n                                        height / 2 + 62.463 * Math.sin(angle)\n                                    const origX = x - width / 2\n                                    const origY = y - height / 2\n                                    const fill =\n                                        activeNotch > index\n                                            ? activeNotchColor\n                                            : defaultNotchColor\n                                    const key = 'notch_' + index\n                                    return (\n                                        <rect\n                                            key={key}\n                                            id={`r${index}`}\n                                            fill={fill}\n                                            width={width}\n                                            height={height}\n                                            x={x}\n                                            y={y}\n                                            transform={`rotate(${\n                                                index *\n                                                    Math.ceil(\n                                                        360 / numNotches,\n                                                    ) +\n                                                90\n                                            } ${origX} ${origY})`}\n                                        />\n                                    )\n                                },\n                            )}\n                        </g>\n                    </svg>\n                    <div\n                        style={{\n                            width: '100%',\n                            textAlign: 'center',\n                            fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            position: 'absolute',\n                            top: 'calc(50% - 0.6em)',\n                            userSelect: 'none',\n                            color: bgrColor,\n                        }}\n                    >\n                        {props.value}\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinWrap from './layout/SkinWrap'\nimport SkinProps from './SkinProps'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\n/*\n * CSS for this component is written by @simurai\n * All credits goes to him\n * https://codepen.io/simurai/pen/DwJdq\n */\n\nconst uniqClassName = `metal-${new Date().getTime()}`\n\nexport default function Silver(props: SkinProps<unknown>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [bgrClass, setBgrClass] = useState(`${uniqClassName}-bgr`)\n\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>((isInteracting) => {\n        isInteracting\n            ? setBgrClass(`${uniqClassName}-bgr-active`)\n            : setBgrClass(`${uniqClassName}-bgr`)\n    }, props.onInteractionChange)\n    const glowSpacing = 28\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter + glowSpacing}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <style type=\"text/css\">\n                        {`.${uniqClassName}-bgr, .${uniqClassName}-bgr-active {\n                        position: absolute;\n                        z-index:1;\n                        outline: none;\n\n                        background-color: hsl(0,0%,90%);\n                        box-shadow: inset hsla(0,0%,15%,  1) 0  0px 0px 4px, /* border */\n                        inset hsla(0,0%,15%, .8) 0 -1px 5px 4px, /* soft SD */\n                        inset hsla(0,0%,0%, .25) 0 -1px 0px 7px, /* bottom SD */\n                        inset hsla(0,0%,100%,.7) 0  2px 1px 7px, /* top HL */\n\n                        hsla(0,0%, 0%,.15) 0 -5px 6px 4px, /* outer SD */\n                        hsla(0,0%,100%,.5) 0  5px 6px 4px; /* outer HL */ \n\n                        transition: color .2s;\n                    }\n                    \n                    .${uniqClassName}-bgr-active {\n                        color: hsl(210, 100%, 40%);\n                        text-shadow: hsla(210,100%,20%,.3) 0 -1px 0, hsl(210,100%,85%) 0 2px 1px, hsla(200,100%,80%,1) 0 0 5px, hsla(210,100%,50%,.6) 0 0 20px;\n                        box-shadow: \n                            inset hsla(208, 79%, 28%,  1) 0  0px 0px 4px, /* border */\n                            inset hsla(208,100%,15%, .4) 0 -1px 5px 4px, /* soft SD */\n                            inset hsla(208,100%,20%,.25) 0 -1px 0px 7px, /* bottom SD */\n                            inset hsla(208,100%,100%,.7) 0  2px 1px 7px, /* top HL */\n\n                            hsla(208,100%,75%, .8) 0  0px 3px 2px, /* outer SD */\n                            hsla(208,50%,40%, .25) 0 -5px 6px 4px, /* outer SD */\n                            hsla(208,80%,95%,   1) 0  5px 6px 4px; /* outer HL */\n                    }\n\n                    .${uniqClassName}-rot {\n                        position: absolute;\n                        z-index: 2;\n                        top: 7px;\n                        left: 7px;\n                        background-image: -webkit-radial-gradient(  50%   0%,  8% 50%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient(  50% 100%, 12% 50%, hsla(0,0%,100%,.6) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient(   0%  50%, 50%  7%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n                        -webkit-radial-gradient( 100%  50%, 50%  5%, hsla(0,0%,100%,.5) 0%, hsla(0,0%,100%,0) 100%),\n\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   3%, hsla(0,0%,  0%,.1) 3.5%),\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%,.1) 7.5%),\n                        -webkit-repeating-radial-gradient( 50% 50%, 100% 100%, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.2) 2.2%),\n\n                        -webkit-radial-gradient( 50% 50%, 200% 50%, hsla(0,0%,90%,1) 5%, hsla(0,0%,85%,1) 30%, hsla(0,0%,60%,1) 100%);\n                    }\n\n\n                    .${uniqClassName}-rot:before, .${uniqClassName}-rot:after {\n                        content: \"\";\n                        top: 0;\n                        left: 0;\n                        position: absolute;\n                        width: inherit;\n                        height: inherit;\n                        border-radius: inherit;\n\n                        /* fake conical gradients */\n                        background-image: -webkit-radial-gradient(  50%   0%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient(  50% 100%, 10% 50%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient(   0%  50%, 50% 10%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%),\n                        -webkit-radial-gradient( 100%  50%, 50% 06%, hsla(0,0%,0%,.1) 0%, hsla(0,0%,0%,0) 100%);\n                    }\n                    .${uniqClassName}-rot:before { transform: rotate( 65deg); }\n                    .${uniqClassName}-rot:after { transform: rotate(-65deg); }\n                    \n                    .${uniqClassName}-notch {\n                        position: absolute;\n                        width: 10px;\n                        height: 10px;\n                        background: black;\n                        border-radius: 5px;\n                        top: 5px;\n                    }\n                    .${uniqClassName}-text {\n                        width: 100%;\n                        text-align: center;\n                        font-weight: bold;\n                        position: absolute;\n                        top: calc(50% - 0.6em);\n                        user-select: none;\n                        z-index: 3;\n                        color: #262626;\n                        text-shadow: -1px -1px 1px #111, 1px 1px 2px #fff;\n                    }`}\n                    </style>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: props.diameter,\n                            height: props.diameter,\n                            userSelect: 'none',\n                            margin: `${glowSpacing / 2}px 0 0 ${\n                                glowSpacing / 2\n                            }px`,\n                        }}\n                    >\n                        <div\n                            className={bgrClass}\n                            style={{\n                                width: `${props.diameter}px`,\n                                height: `${props.diameter}px`,\n                                borderRadius: `${props.diameter / 2}px`,\n                            }}\n                        ></div>\n                        <div\n                            className={`${uniqClassName}-rot`}\n                            style={{\n                                width: `${props.diameter - 14}px`,\n                                height: `${props.diameter - 14}px`,\n                                lineHeight: `${props.diameter - 14}px`,\n                                borderRadius: `${(props.diameter - 14) / 2}px`,\n                                transform: `rotate(${angle}deg)`,\n                            }}\n                        >\n                            <div\n                                className={`${uniqClassName}-notch`}\n                                style={{\n                                    left: `${(props.diameter - 24) / 2}px`,\n                                }}\n                            ></div>\n                        </div>\n                        <div\n                            className={`${uniqClassName}-text`}\n                            style={{\n                                fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            }}\n                        >\n                            {props.value}\n                        </div>\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n","import React, { useState } from 'react'\nimport Knob from '../Knob'\nimport SkinProps from './SkinProps'\nimport SkinWrap from './layout/SkinWrap'\nimport composeTwo from '../util/composeTwo'\nimport useAngleUpdater from '../util/useAngleUpdater'\n\nexport interface DonutTheme {\n    donutColor?: string\n    bgrColor?: string\n    maxedBgrColor?: string\n    centerColor?: string\n    centerFocusedColor?: string\n    donutThickness?: number\n}\n\n/*\n * CSS for this component is written by @Hyungsub\n * All credits goes to him\n * https://codepen.io/Hyungsub08/pen/yLBPJKW\n */\n\nconst uniqClassName = `donut-${new Date().getTime()}`\n\nexport default function Donut(props: SkinProps<DonutTheme>): JSX.Element {\n    const [angle, setAngle] = useAngleUpdater(props.value)\n    const [centerClass, setCenterClass] = useState(`${uniqClassName}-center`)\n\n    const angleChangeHandler = composeTwo<number>(setAngle, props.onAngleChange)\n    const interactionChangeHandler = composeTwo<boolean>((isInteracting) => {\n        isInteracting\n            ? setCenterClass(`${uniqClassName}-center-active`)\n            : setCenterClass(`${uniqClassName}-center`)\n    }, props.onInteractionChange)\n\n    const theme = props.theme || {}\n\n    const donutColor = theme.donutColor || '#1BA098'\n    const defaultBgrColor = theme.bgrColor || '#e1e1e1'\n    const maxedBgrColor = theme.maxedBgrColor || '#051622'\n    const centerColor = theme.centerColor || '#fff'\n    const centerFocusedColor = theme.centerFocusedColor || '#F7F4E9'\n    const donutThickness = theme.donutThickness || 30\n\n    let bgrColor = defaultBgrColor\n    if (props.value === props.max) {\n        bgrColor = maxedBgrColor\n    }\n    let colorBgr = bgrColor\n    let colorOne = donutColor\n    let colorTwo = donutColor\n    let angleOne = 90\n    let angleTwo = angle\n\n    if (angle < 180) {\n        colorBgr = donutColor\n        colorOne = bgrColor\n        colorTwo = bgrColor\n        angleOne = angle + 90\n        angleTwo = 0\n    }\n    return (\n        <SkinWrap style={props.style}>\n            <Knob\n                diameter={props.diameter}\n                value={props.value}\n                min={props.min}\n                max={props.max}\n                step={props.step}\n                jumpLimit={props.jumpLimit}\n                spaceMaxFromZero={props.spaceMaxFromZero}\n                ariaLabelledBy={props.ariaLabelledBy}\n                ariaValueText={props.ariaValueText}\n                knobStyle={{ cursor: 'pointer', ...props.knobStyle }}\n                onAngleChange={angleChangeHandler}\n                onInteractionChange={interactionChangeHandler}\n                onValueChange={props.onValueChange}\n            >\n                <>\n                    <style type=\"text/css\">\n                        {`.${uniqClassName} {\n                      position: relative;\n                      border-radius: 50%;\n                      overflow: hidden;\n                    }\n                    .${uniqClassName}-slice-one, .${uniqClassName}-slice-two {\n                      position: absolute;\n                      top: 0;\n                      left: 0;\n                      width: 100%;\n                      height: 100%;\n                    }\n                    .${uniqClassName}-center, .${uniqClassName}-center-active {\n                      position: absolute;\n                      border-radius: 50%;\n                    }\n                    .${uniqClassName}-center {\n                      background: ${centerColor};\n                    }\n                    .${uniqClassName}-center-active {\n                      background: ${centerFocusedColor};\n                    }\n                    .${uniqClassName}-center span {\n                      display: block;\n                      text-align: center;\n                    }\n                    .${uniqClassName}-text {\n                        width: 100%;\n                        text-align: center;\n                        font-weight: bold;\n                        position: absolute;\n                        top: calc(50% - 0.6em);\n                        user-select: none;\n                        z-index: 3;\n                    }`}\n                    </style>\n                    <div\n                        style={{\n                            position: 'relative',\n                            width: props.diameter,\n                            height: props.diameter,\n                            userSelect: 'none',\n                        }}\n                    >\n                        <div\n                            className={uniqClassName}\n                            style={{\n                                width: `${props.diameter}px`,\n                                height: `${props.diameter}px`,\n                                background: colorBgr,\n                            }}\n                        >\n                            <div\n                                className={`${uniqClassName}-slice-one`}\n                                style={{\n                                    clip: `rect(0 ${props.diameter}px ${\n                                        props.diameter / 2\n                                    }px 0)`,\n                                    transform: `rotate(${angleOne}deg)`,\n                                    background: colorOne,\n                                }}\n                            ></div>\n                            <div\n                                className={`${uniqClassName}-slice-two`}\n                                style={{\n                                    clip: `rect(0 ${props.diameter / 2}px ${\n                                        props.diameter\n                                    }px 0)`,\n                                    transform: `rotate(${angleTwo}deg)`,\n                                    background: colorTwo,\n                                }}\n                            ></div>\n                            <div\n                                className={centerClass}\n                                style={{\n                                    top: `${donutThickness}px`,\n                                    left: `${donutThickness}px`,\n                                    width: `${\n                                        props.diameter - donutThickness * 2\n                                    }px`,\n                                    height: `${\n                                        props.diameter - donutThickness * 2\n                                    }px`,\n                                }}\n                            ></div>\n                        </div>\n                        <div\n                            className={`${uniqClassName}-text`}\n                            style={{\n                                color: donutColor,\n                                fontSize: `${Math.ceil(props.diameter / 4)}px`,\n                            }}\n                        >\n                            {props.value}\n                        </div>\n                    </div>\n                </>\n            </Knob>\n            {props.children}\n        </SkinWrap>\n    )\n}\n"],"names":["React","useRef","useState","useEffect","uniqClassName"],"mappings":"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"}